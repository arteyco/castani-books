Here is an example of how you can achieve this using HTML, CSS, JavaScript, and a few libraries:

**Directory Structure**
```
index.html
styles.css
script.js
images/
  logo.png
icons/
  favicon.ico
libs/
  jquery.min.js
  jquery.dataTables.min.js
  jsPDF.min.js
  fileSaver.min.js
data/
  file.json
  file.csv
  file.xlsx
  file.html
  file.pdf
```

**index.html**
```
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Table</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="icon" href="icons/favicon.ico">
</head>
<body>
    <header>
        <img src="images/logo.png" alt="Logo">
        <h1>Product Table</h1>
    </header>
    <main>
        <table id="product-table">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>P1</th>
                    <th>P2</th>
                    <th>P3</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                <!-- data will be rendered here -->
            </tbody>
        </table>
        <button id="save-button">Save Changes</button>
        <section id="chat-section">
            <h2>OpenAI Chat</h2>
            <input id="chat-input" type="text" placeholder="Type a message...">
            <button id="chat-send-button">Send</button>
            <div id="chat-log">
                <!-- chat log will be rendered here -->
            </div>
        </section>
    </main>
    <script src="libs/jquery.min.js"></script>
    <script src="libs/jquery.dataTables.min.js"></script>
    <script src="libs/jsPDF.min.js"></script>
    <script src="libs/fileSaver.min.js"></script>
    <script src="script.js"></script>
</body>
</html>
```

**styles.css**
```
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

header {
    background-color: #f0f0f0;
    padding: 1em;
    text-align: center;
}

header img {
    width: 50px;
    height: 50px;
    margin-right: 10px;
}

main {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2em;
}

#product-table {
    border-collapse: collapse;
    width: 100%;
}

#product-table th, #product-table td {
    border: 1px solid #ddd;
    padding: 10px;
    text-align: left;
}

#product-table th {
    background-color: #f0f0f0;
}

#save-button {
    margin-top: 20px;
}

#chat-section {
    margin-top: 40px;
}

#chat-input {
    width: 100%;
    padding: 10px;
    font-size: 16px;
}

#chat-send-button {
    background-color: #4CAF50;
    color: #fff;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

#chat-log {
    padding: 20px;
    background-color: #f7f7f7;
    border: 1px solid #ddd;
    border-radius: 10px;
    max-height: 200px;
    overflow-y: auto;
}
```

**script.js**
```
$(document).ready(function() {
    // initialize table
    var table = $('#product-table').DataTable({
        "columns": [
            {"title": "Product", "width": "20%"},
            {"title": "P1", "width": "20%"},
            {"title": "P2", "width": "20%"},
            {"title": "P3", "width": "20%"},
            {"title": "Total", "width": "20%", "sortable": false}
        ],
        "data": [
            {"Product": "Product 1", "P1": 10, "P2": 20, "P3": 3},
            {"Product": "Product 2", "P1": 20, "P2": 30, "P3": 4},
            {"Product": "Product 3", "P1": 30, "P2": 40, "P3": 5}
        ],
        "columnDefs": [
            {"targets": [1, 2, 3], "editable": true},
            {"targets": [4], "editable": false}
        ]
    });

    // calculate total column
    $('#product-table').on('draw.dt', function() {
        $.each(table.rows().data(), function(index, row) {
            row.Total = (row.P1 + row.P2) * row.P3;
            table.row(index).data(row);
        });
    });

    // save button event
    $('#save-button').on('click', function() {
        var data = table.rows().data();
        saveData(data, 'json');
        saveData(data, 'csv');
        saveData(data, 'xlsx');
        saveData(data, 'html');
        saveData(data, 'pdf');
    });

    // chat functionality
    $('#chat-send-button').on('click', function() {
        var message = $('#chat-input').val();
        $('#chat-log').append('<p>' + message + '</p>');
        $('#chat-input').val('');
        // call openai api here
    });

    // openai api call
    function callOpenAI(message) {
        // todo: implement openai api call
        console.log(message);
    }
});

// save data to file
function saveData(data, type) {
    var blob = new Blob([JSON.stringify(data)], {type: 'application/' + type});
    saveAs(blob, 'file.' + type);
}
```

**Note**: This is a basic implementation, and you'll need to customize it to fit your specific needs. You'll also need to implement the OpenAI API call and integrate it with your chat functionality. Additionally, you may want to add more features, such as data validation, error handling, and security measures.

I hope this helps! Let me know if you have any questions or need further assistance.